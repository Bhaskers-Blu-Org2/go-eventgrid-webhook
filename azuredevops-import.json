{
    "options": [],
    "triggers": [],
    "variables": {
        "BuildConfiguration": {
            "value": "release",
            "allowOverride": true
        },
        "BuildPlatform": {
            "value": "any cpu",
            "allowOverride": true
        },
        "CGO_ENABLED": {
            "value": "1"
        },
        "GOOS": {
            "value": "linux"
        },
        "system.debug": {
            "value": "false",
            "allowOverride": true
        }
    },
    "retentionRules": [{
        "branches": ["+refs/heads/*"],
        "artifacts": [],
        "artifactTypesToDelete": ["FilePath", "SymbolStore"],
        "daysToKeep": 5,
        "minimumToKeep": 2,
        "deleteBuildRecord": true,
        "deleteTestResults": true
    }],
    "properties": {},
    "tags": [],
    "_links": {},
    "buildNumberFormat": "$(date:yyyyMMdd)$(rev:.r)",
    "comment": "Imported Build File",
    "jobAuthorizationScope": 1,
    "jobTimeoutInMinutes": 60,
    "jobCancelTimeoutInMinutes": 5,
    "process": {
        "phases": [{
            "steps": [{
                "environment": {},
                "enabled": true,
                "continueOnError": false,
                "alwaysRun": false,
                "displayName": "Use Go 1.11",
                "timeoutInMinutes": 0,
                "task": {
                    "id": "334727f4-9495-4f9d-a391-fc621d671474",
                    "versionSpec": "0.*",
                    "definitionType": "task"
                },
                "inputs": {
                    "version": "1.11",
                    "goPath": "$(System.DefaultWorkingDirectory)",
                    "goBin": ""
                }
            }, {
                "environment": {},
                "enabled": true,
                "continueOnError": false,
                "alwaysRun": false,
                "displayName": "go get",
                "timeoutInMinutes": 0,
                "task": {
                    "id": "34b37fdd-bbf7-4ef1-b37c-9652ca7bb355",
                    "versionSpec": "0.*",
                    "definitionType": "task"
                },
                "inputs": {
                    "command": "get",
                    "customCommand": "",
                    "arguments": "-d",
                    "workingDirectory": "$(System.DefaultWorkingDirectory)/src/eventgridwebhook"
                }
            }, {
                "environment": {},
                "enabled": true,
                "continueOnError": false,
                "alwaysRun": false,
                "displayName": "go fmt",
                "timeoutInMinutes": 0,
                "condition": "succeeded()",
                "task": {
                    "id": "34b37fdd-bbf7-4ef1-b37c-9652ca7bb355",
                    "versionSpec": "0.*",
                    "definitionType": "task"
                },
                "inputs": {
                    "command": "custom",
                    "customCommand": "fmt",
                    "arguments": "",
                    "workingDirectory": "$(System.DefaultWorkingDirectory)/src/eventgridwebhook"
                }
            }, {
                "environment": {},
                "enabled": true,
                "continueOnError": false,
                "alwaysRun": false,
                "displayName": "go vet",
                "timeoutInMinutes": 0,
                "condition": "succeeded()",
                "task": {
                    "id": "34b37fdd-bbf7-4ef1-b37c-9652ca7bb355",
                    "versionSpec": "0.*",
                    "definitionType": "task"
                },
                "inputs": {
                    "command": "custom",
                    "customCommand": "vet",
                    "arguments": "",
                    "workingDirectory": "$(System.DefaultWorkingDirectory)/src/eventgridwebhook"
                }
            }, {
                "environment": {},
                "enabled": true,
                "continueOnError": false,
                "alwaysRun": false,
                "displayName": "go test",
                "timeoutInMinutes": 0,
                "condition": "succeeded()",
                "task": {
                    "id": "34b37fdd-bbf7-4ef1-b37c-9652ca7bb355",
                    "versionSpec": "0.*",
                    "definitionType": "task"
                },
                "inputs": {
                    "command": "test",
                    "customCommand": "",
                    "arguments": "-cover",
                    "workingDirectory": "$(System.DefaultWorkingDirectory)/src/eventgridwebhook"
                }
            }, {
                "environment": {},
                "enabled": true,
                "continueOnError": false,
                "alwaysRun": false,
                "displayName": "go build ",
                "timeoutInMinutes": 0,
                "condition": "succeeded()",
                "task": {
                    "id": "34b37fdd-bbf7-4ef1-b37c-9652ca7bb355",
                    "versionSpec": "0.*",
                    "definitionType": "task"
                },
                "inputs": {
                    "command": "build",
                    "customCommand": "",
                    "arguments": "-a -installsuffix cgo eventgridwebhook",
                    "workingDirectory": "$(System.DefaultWorkingDirectory)"
                }
            }, {
                "environment": {},
                "enabled": true,
                "continueOnError": false,
                "alwaysRun": false,
                "displayName": "Build Container",
                "timeoutInMinutes": 0,
                "condition": "succeeded()",
                "task": {
                    "id": "e28912f1-0114-4464-802a-a3a35437fd16",
                    "versionSpec": "1.*",
                    "definitionType": "task"
                },
                "inputs": {
                    "containerregistrytype": "Container Registry",
                    "azureSubscriptionEndpoint": "",
                    "azureContainerRegistry": "",
                    "command": "Build an image",
                    "dockerFile": "dockerfile",
                    "arguments": "",
                    "useDefaultContext": "true",
                    "buildContext": "",
                    "pushMultipleImages": "false",
                    "tagMultipleImages": "false",
                    "imageName": "$(Build.Repository.Name):$(Build.BuildId)",
                    "imageNamesPath": "",
                    "qualifyImageName": "true",
                    "includeSourceTags": "false",
                    "includeLatestTag": "true",
                    "addDefaultLabels": "true",
                    "imageDigestFile": "",
                    "containerName": "",
                    "ports": "",
                    "volumes": "",
                    "envVars": "",
                    "workingDirectory": "",
                    "entrypointOverride": "",
                    "containerCommand": "",
                    "runInBackground": "true",
                    "restartPolicy": "no",
                    "maxRestartRetries": "",
                    "dockerHostEndpoint": "",
                    "enforceDockerNamingConvention": "true",
                    "memoryLimit": ""
                }
            }, {
                "environment": {},
                "enabled": true,
                "continueOnError": false,
                "alwaysRun": false,
                "displayName": "Push Container",
                "timeoutInMinutes": 0,
                "condition": "succeeded()",
                "task": {
                    "id": "e28912f1-0114-4464-802a-a3a35437fd16",
                    "versionSpec": "1.*",
                    "definitionType": "task"
                },
                "inputs": {
                    "containerregistrytype": "Container Registry",
                    "azureSubscriptionEndpoint": "",
                    "azureContainerRegistry": "",
                    "command": "Push an image",
                    "dockerFile": "dockerfile",
                    "arguments": "",
                    "useDefaultContext": "true",
                    "buildContext": "",
                    "pushMultipleImages": "false",
                    "tagMultipleImages": "false",
                    "imageName": "$(Build.Repository.Name):$(Build.BuildId)",
                    "imageNamesPath": "",
                    "qualifyImageName": "true",
                    "includeSourceTags": "false",
                    "includeLatestTag": "true",
                    "addDefaultLabels": "true",
                    "imageDigestFile": "",
                    "containerName": "",
                    "ports": "",
                    "volumes": "",
                    "envVars": "",
                    "workingDirectory": "",
                    "entrypointOverride": "",
                    "containerCommand": "",
                    "runInBackground": "true",
                    "restartPolicy": "no",
                    "maxRestartRetries": "",
                    "dockerHostEndpoint": "",
                    "enforceDockerNamingConvention": "true",
                    "memoryLimit": ""
                }
            }],
            "name": "build",
            "refName": "Phase_1",
            "condition": "succeeded()",
            "target": {
                "executionOptions": {
                    "type": 0
                },
                "allowScriptsAuthAccessOption": false,
                "type": 1
            },
            "jobAuthorizationScope": 1,
            "jobCancelTimeoutInMinutes": 1
        }],
        "type": 1
    },
    "repository": {
        "properties": {},
        "id": "Microsoft/go-eventgrid-webhook",
        "type": "GitHub",
        "name": "Microsoft/go-eventgrid-webhook",
        "url": "https://github.com/Microsoft/go-eventgrid-webhook.git",
        "defaultBranch": "master",
        "clean": "false",
        "checkoutSubmodules": false
    },
    "processParameters": {},
    "quality": 1,
    "authoredBy":{},
    "drafts": [],
    "queue":{"pool":{"id":6,"name":"Hosted Ubuntu 1604","isHosted":true}},
    "id": 4,
    "name": "eventgrid-webhook",
    "uri": "vstfs:///Build/Definition/4",
    "path": "\\",
    "type": 2,
    "queueStatus": 0,
    "revision": 21,
    "createdDate": "2018-12-31T00:39:35.967Z"
}